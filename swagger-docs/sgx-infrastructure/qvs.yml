basePath: /qvs/v1/
definitions:
  QuoteVerificationRequest:
    properties:
      quote:
        type: string
        x-go-name: Quote
    type: object
    x-go-package: github.com/intel-secl/intel-secl-tee/v5/pkg/model/qvs
  QuoteVerificationResponse:
    properties:
      collateral_expiration_status:
        type: boolean
        x-go-name: ExpirationStatus
      quote_verification_result:
        $ref: '#/definitions/QuoteVerificationResult'
    type: object
    x-go-package: github.com/intel-secl/intel-secl-tee/v5/pkg/model/qvs
  QuoteVerificationResult:
    format: int64
    type: integer
    x-go-package: github.com/intel-secl/intel-secl-tee/v5/pkg/model/qvs
host: qvs.com:12000
info:
  description: |-
    The Quote Verification Service (QVS) is a component of IntelÂ® Security Libraries (ISecL).
    It interfaces with a backend quote verification library to verify sgx and tdx quotes.
    It also interfaces with a caching service to fetch the quote verification collaterals to be
    used for verification.
    During installation, a timestamp can be provided to be used as trusted time for checking
    quote verification collaterals expiry. If no timestamp is provided, current system time will be
    used for checking collaterals expiry.
  license:
    name: 'Copyright (C) 2021 Intel Corporation. SPDX-License-Identifier: BSD-3-Clause'
  title: Quote Verification Service
  version: 1.0.0
paths:
  /quote/sgx/verify:
    post:
      consumes:
      - application/json
      description: |
        Verifies sgx quote.
        The serialized QuoteVerificationRequest Go struct object represents the content of the request body.

         | Attribute | Description |
         |-----------|-------------|
         | quote     | Sgx Quote in base64 encoding. |

        Returns - The serialized QuoteVerificationResponse Go struct object that was retrieved.
      operationId: VerifySgxQuote
      parameters:
      - in: body
        name: request body
        required: true
        schema:
          $ref: '#/definitions/QuoteVerificationRequest'
      - description: Content-Type header
        enum:
        - application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - description: Accept header
        enum:
        - application/json
        in: header
        name: Accept
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully verified the sgx quote.
          schema:
            $ref: '#/definitions/QuoteVerificationResponse'
        "400":
          description: Invalid request body provided
        "415":
          description: Invalid Accept Header in Request
        "500":
          description: Internal server error
      security:
      - bearerAuth: []
      tags:
      - Quote
      x-permissions: sgx_quote:verify
      x-sample-call-endpoint: https://qvs.com:12000/qvs/v1/quote/sgx/verify
      x-sample-call-input: |
        {
            "quote": "AwACAAAAAAAFAAoAk5pyM/ecTKmUCg2zlX8GBypMS9nfqV6rqv6EvxVGIL8AAAAAAgIAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAAAAADnAAAAAAAAAH3wt+gVvUtK9BI5A40Ep0DazPC+tBKiBWyNkAtFtiH9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADNFxxWlBxs5JaQtFX2kdnIoEwuQ+Ck0w91L6UoXH7lfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYJVermUeEet25DlOe/c11YOUKcrFyaks4LvDG0WgbrwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1BAAACZVqHPYMf7vWGZ59OhQZOWPQtdmyT60oGdQ+BlGoRAFEtnapeOYTsYaURSNyUWPhus5u0dakJCAqBjWWg5QzmfygZIyfhk8hKOOUIlFBy0R1fIZPQchqy4XnZH4BQw3lpNCXdSEA0VWPz0JgKRISJQLsFuAOKQIbmWrAMQVQtf0AgIAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAAAAAAADnAAAAAAAAAGDYWvKL6NHECgjZiwCdX4rME4Sjhc9GCADkeHkdGpecAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMT1d115ZQPpYTf3fGioKaAFasje1wFAsIGwlEkMV7/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABY11dxrLn7X0ohNIgqPou/5GCXO6Mx4r+pswLnIhN0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4gt/4Unrpww8sNSDsScvFg+59DmpjQzr1dF13isKz2ChQD+JWM6aeJElHSYhtP/QhthmFCwnepU8shtFPi0K4CAAAAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8FAGwOAAAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRTlEQ0NCSnFnQXdJQkFnSVVMMnV3N0VOc3FSTnFGL1dsRFFGcVc4WVFUN1F3Q2dZSUtvWkl6ajBFQXdJd2NERWlNQ0FHQTFVRQpBd3daU1c1MFpXd2dVMGRZSUZCRFN5QlFiR0YwWm05eWJTQkRRVEVhTUJnR0ExVUVDZ3dSU1c1MFpXd2dRMjl5Y0c5eVlYUnBiMjR4CkZEQVNCZ05WQkFjTUMxTmhiblJoSUVOc1lYSmhNUXN3Q1FZRFZRUUlEQUpEUVRFTE1Ba0dBMVVFQmhNQ1ZWTXdIaGNOTWpBeE1URXoKTURFME1UQXlXaGNOTWpjeE1URXpNREUwTVRBeVdqQndNU0l3SUFZRFZRUUREQmxKYm5SbGJDQlRSMWdnVUVOTElFTmxjblJwWm1sagpZWFJsTVJvd0dBWURWUVFLREJGSmJuUmxiQ0JEYjNKd2IzSmhkR2x2YmpFVU1CSUdBMVVFQnd3TFUyRnVkR0VnUTJ4aGNtRXhDekFKCkJnTlZCQWdNQWtOQk1Rc3dDUVlEVlFRR0V3SlZVekJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQkpZMytWbVBCNG0KN0lRWEhiTTA3Wlp4WXBvbTJUTnNWSnpZd2UrVytzWWtXV1FncFlrQ0hQd2RNa2ZBU05JM2pld01pOWM1SDFlODV2RCtMSEYwalAragpnZ01RTUlJREREQWZCZ05WSFNNRUdEQVdnQlJaSTlPblNxaGpWQzQ1Y0szZ0R3Y3JWeVFxdHpCdkJnTlZIUjhFYURCbU1HU2dZcUJnCmhsNW9kSFJ3Y3pvdkwzTmllQzVoY0drdWRISjFjM1JsWkhObGNuWnBZMlZ6TG1sdWRHVnNMbU52YlM5elozZ3ZZMlZ5ZEdsbWFXTmgKZEdsdmJpOTJNeTl3WTJ0amNtdy9ZMkU5Y0d4aGRHWnZjbTBtWlc1amIyUnBibWM5WkdWeU1CMEdBMVVkRGdRV0JCUkxTMWE5QWhCMwptYjhDUjJZVkpwa3hPZUxxVWpBT0JnTlZIUThCQWY4RUJBTUNCc0F3REFZRFZSMFRBUUgvQkFJd0FEQ0NBamtHQ1NxR1NJYjRUUUVOCkFRU0NBaW93Z2dJbU1CNEdDaXFHU0liNFRRRU5BUUVFRVBnYXlXbVNZMFF6V1lVZG14Vnc0Und3Z2dGakJnb3Foa2lHK0UwQkRRRUMKTUlJQlV6QVFCZ3NxaGtpRytFMEJEUUVDQVFJQkFqQVFCZ3NxaGtpRytFMEJEUUVDQWdJQkFqQVFCZ3NxaGtpRytFMEJEUUVDQXdJQgpBREFRQmdzcWhraUcrRTBCRFFFQ0JBSUJBREFRQmdzcWhraUcrRTBCRFFFQ0JRSUJBREFRQmdzcWhraUcrRTBCRFFFQ0JnSUJBREFRCkJnc3Foa2lHK0UwQkRRRUNCd0lCQURBUUJnc3Foa2lHK0UwQkRRRUNDQUlCQURBUUJnc3Foa2lHK0UwQkRRRUNDUUlCQURBUUJnc3EKaGtpRytFMEJEUUVDQ2dJQkFEQVFCZ3NxaGtpRytFMEJEUUVDQ3dJQkFEQVFCZ3NxaGtpRytFMEJEUUVDREFJQkFEQVFCZ3NxaGtpRworRTBCRFFFQ0RRSUJBREFRQmdzcWhraUcrRTBCRFFFQ0RnSUJBREFRQmdzcWhraUcrRTBCRFFFQ0R3SUJBREFRQmdzcWhraUcrRTBCCkRRRUNFQUlCQURBUUJnc3Foa2lHK0UwQkRRRUNFUUlCQ2pBZkJnc3Foa2lHK0UwQkRRRUNFZ1FRQWdJQUFBQUFBQUFBQUFBQUFBQUEKQURBUUJnb3Foa2lHK0UwQkRRRURCQUlBQURBVUJnb3Foa2lHK0UwQkRRRUVCQVlRWUdvQUFBQXdEd1lLS29aSWh2aE5BUTBCQlFvQgpBVEFlQmdvcWhraUcrRTBCRFFFR0JCQTc5SWlaYWlhbXJSSW5zdWEwcFRqak1FUUdDaXFHU0liNFRRRU5BUWN3TmpBUUJnc3Foa2lHCitFMEJEUUVIQVFFQi96QVFCZ3NxaGtpRytFMEJEUUVIQWdFQkFEQVFCZ3NxaGtpRytFMEJEUUVIQXdFQi96QUtCZ2dxaGtqT1BRUUQKQWdOSUFEQkZBaUVBdXNreWlrcFMvT1RHWG5tckJDY25QUXlnWElocWVjbDY4NExWaWJQNEpvZ0NJQ0xhKzZ6Uzg2c1paVFZwTGxtWApIS1ZoTkxTRExLVUwvb3pOa1N3eVZta2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDbWpDQ0FrQ2dBd0lCQWdJVVdTUFRwMHFvWTFRdU9YQ3Q0QThISzFja0tyY3dDZ1lJS29aSXpqMEVBd0l3CmFERWFNQmdHQTFVRUF3d1JTVzUwWld3Z1UwZFlJRkp2YjNRZ1EwRXhHakFZQmdOVkJBb01FVWx1ZEdWc0lFTnYKY25CdmNtRjBhVzl1TVJRd0VnWURWUVFIREF0VFlXNTBZU0JEYkdGeVlURUxNQWtHQTFVRUNBd0NRMEV4Q3pBSgpCZ05WQkFZVEFsVlRNQjRYRFRFNU1UQXpNVEV5TXpNME4xb1hEVE0wTVRBek1URXlNek0wTjFvd2NERWlNQ0FHCkExVUVBd3daU1c1MFpXd2dVMGRZSUZCRFN5QlFiR0YwWm05eWJTQkRRVEVhTUJnR0ExVUVDZ3dSU1c1MFpXd2cKUTI5eWNHOXlZWFJwYjI0eEZEQVNCZ05WQkFjTUMxTmhiblJoSUVOc1lYSmhNUXN3Q1FZRFZRUUlEQUpEUVRFTApNQWtHQTFVRUJoTUNWVk13V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVF3cCtMYytUVUJ0ZzFICitVOEpJc01zYmpIakNrVHRYYjhqUE02cjJkaHU5eklibGhEWjdJTmZxdDNJeDhYY0ZLRDhrME5FWHJrWjY2cUoKWGExS3pMSUtvNEcvTUlHOE1COEdBMVVkSXdRWU1CYUFGT25vUkZKVE5seExHSm9SL0VNWUxLWGNJSUJJTUZZRwpBMVVkSHdSUE1FMHdTNkJKb0VlR1JXaDBkSEJ6T2k4dmMySjRMV05sY25ScFptbGpZWFJsY3k1MGNuVnpkR1ZrCmMyVnlkbWxqWlhNdWFXNTBaV3d1WTI5dEwwbHVkR1ZzVTBkWVVtOXZkRU5CTG1SbGNqQWRCZ05WSFE0RUZnUVUKV1NQVHAwcW9ZMVF1T1hDdDRBOEhLMWNrS3Jjd0RnWURWUjBQQVFIL0JBUURBZ0VHTUJJR0ExVWRFd0VCL3dRSQpNQVlCQWY4Q0FRQXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSjFxK0ZUeitnVXVWZkJRdUNnSnNGckwyVFRTCmUxYUJaNTNPNTJUakZpZTZBaUFyaVBhUmFoVVg5T2E5a0dMbEFjaFdYS1Q2ajRSV1NSNTBCcWhyTjNVVDRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ2xEQ0NBam1nQXdJQkFnSVZBT25vUkZKVE5seExHSm9SL0VNWUxLWGNJSUJJTUFvR0NDcUdTTTQ5QkFNQwpNR2d4R2pBWUJnTlZCQU1NRVVsdWRHVnNJRk5IV0NCU2IyOTBJRU5CTVJvd0dBWURWUVFLREJGSmJuUmxiQ0JECmIzSndiM0poZEdsdmJqRVVNQklHQTFVRUJ3d0xVMkZ1ZEdFZ1EyeGhjbUV4Q3pBSkJnTlZCQWdNQWtOQk1Rc3cKQ1FZRFZRUUdFd0pWVXpBZUZ3MHhPVEV3TXpFd09UUTVNakZhRncwME9URXlNekV5TXpVNU5UbGFNR2d4R2pBWQpCZ05WQkFNTUVVbHVkR1ZzSUZOSFdDQlNiMjkwSUVOQk1Sb3dHQVlEVlFRS0RCRkpiblJsYkNCRGIzSndiM0poCmRHbHZiakVVTUJJR0ExVUVCd3dMVTJGdWRHRWdRMnhoY21FeEN6QUpCZ05WQkFnTUFrTkJNUXN3Q1FZRFZRUUcKRXdKVlV6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJFLzZELzFXSE5yV3dQbU5NSXlCS01XNQpKNkp6TXNqbzZ4UDJ2a0sxY2RaR2IxUEdSUC9DLzhFQ2dpRGtta2xtendMekxpKzAwMG03TExydEtKQTNvQzJqCmdiOHdnYnd3SHdZRFZSMGpCQmd3Rm9BVTZlaEVVbE0yWEVzWW1oSDhReGdzcGR3Z2dFZ3dWZ1lEVlIwZkJFOHcKVFRCTG9FbWdSNFpGYUhSMGNITTZMeTl6WW5ndFkyVnlkR2xtYVdOaGRHVnpMblJ5ZFhOMFpXUnpaWEoyYVdObApjeTVwYm5SbGJDNWpiMjB2U1c1MFpXeFRSMWhTYjI5MFEwRXVaR1Z5TUIwR0ExVWREZ1FXQkJUcDZFUlNVelpjClN4aWFFZnhER0N5bDNDQ0FTREFPQmdOVkhROEJBZjhFQkFNQ0FRWXdFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUIKQVRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQXp3OXpkVWlVSFBNVWQwQzRteDQxamxGWmtyTTN5NWYxbGduVgpPN0Ziak9vQ0lRQ29HdFVtVDRjWHQ3Vit5U0hiSjhIb2I5QWFucHZYTkgxRVIrL2daRitvcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        }
      x-sample-call-output: |-
        {
            "collateral_expiration_status": false,
            "quote_verification_result": "OK"
        }
  /quote/tdx/verify:
    post:
      consumes:
      - application/json
      description: |
        Verifies tdx quote.
        The serialized QuoteVerificationRequest Go struct object represents the content of the request body.

         | Attribute | Description |
         |-----------|-------------|
         | quote     | Tdx Quote in base64 encoding. |

        Returns - The serialized QuoteVerificationResponse Go struct object that was retrieved.
      operationId: VerifyTdxQuote
      parameters:
      - in: body
        name: request body
        required: true
        schema:
          $ref: '#/definitions/QuoteVerificationRequest'
      - description: Content-Type header
        enum:
        - application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - description: Accept header
        enum:
        - application/json
        in: header
        name: Accept
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully verified the tdx quote.
          schema:
            $ref: '#/definitions/QuoteVerificationResponse'
        "400":
          description: Invalid request body provided
        "415":
          description: Invalid Accept Header in Request
        "500":
          description: Internal server error
      security:
      - bearerAuth: []
      tags:
      - Quote
      x-permissions: tdx_quote:verify
      x-sample-call-endpoint: https://qvs.com:12000/qvs/v1/quote/tdx/verify
      x-sample-call-input: |
        {
            "quote": "BAACAIEAAAAAAAAAk5pyM/ecTKmUCg2zlX8GB4BLm6jBRH6ZyxYJkDM4bN0AAAAAAAABAAAAAAAAAAAAAAAAAA87ctD5YGCG1qeADn1QuC+my17GTHIQNToGlsHu80Nnm/W56OwL9Yqz/OEPLBZuvgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAADnAgAAAAAAAM9lZBT8D0myPirmS28juCkB4iBqqza2ceNg69QUiZ2rUbu2ATS75q2NzHC5ldncUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkKvUNzY4GxL8mwOJJMc+Mcg3FnSQXn/LeUHWn+WdMO2jrbnkG4eBUedW+wWtE9FKU8mLFvDeRwM45/By2cX872FxMn7Gx4uELmNyUbHebjc1TEf7aN4n7xS7Z8ryiNmwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+BwhBawkQ1DXOZXWVcMBlRbEEXimRzyGBsc9oHxu9GR7JXoXSb1oIOcN90zA+NHXvONQYzqM6TFUFtHAddYk7eEAAAs0hRxzUpY0ZLrgRAnb4siL8H32Gr3Js5bXrdyUi8JPXtUZev6oL14cAJwM2pKLxYU/EMFDlCy39lrshftR05B0aywBQdpqxqgu+72tkpPIEcw1gC/mn/u1IjtFHoG7lBkRlWVIhK5mC87rDJAnMxgrNriyDAPV/nViXHA7SmQpkGAFgQAAABAQAA//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAAAAAAAOcAAAAAAAAA24vzILP0Jue9JnaB5ItGJp0c7h3NSVpZ9CXGFvGm/HcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOS9n8ISmDW6Hcyhk51X0I6IVhs0dA1ZQFly1Lolp+X3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIWrGSUNyE5HWBI/qBfZtnoauJ/ZXqHNunL3xSYX1HEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADjj0yY21ED58FNlnMKDPOP7BN28+Y56W55jQx70BT8XE2sLuy58R0+wAywQk1XQPLbXxrIoYuHilkjR/hXORHuIAAAAQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobHB0eHwUAcA4AAC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlFOVRDQ0JKdWdBd0lCQWdJVkFNTDVyd3NvUWNjVU1sbGNyTVJSWnJvR1A4YTdNQW9HQ0NxR1NNNDlCQU1DTUhBeElqQWdCZ05WCkJBTU1HVWx1ZEdWc0lGTkhXQ0JRUTBzZ1VHeGhkR1p2Y20wZ1EwRXhHakFZQmdOVkJBb01FVWx1ZEdWc0lFTnZjbkJ2Y21GMGFXOXUKTVJRd0VnWURWUVFIREF0VFlXNTBZU0JEYkdGeVlURUxNQWtHQTFVRUNBd0NRMEV4Q3pBSkJnTlZCQVlUQWxWVE1CNFhEVEl4TURndwpNekE0TXpneU1Wb1hEVEk0TURnd016QTRNemd5TVZvd2NERWlNQ0FHQTFVRUF3d1pTVzUwWld3Z1UwZFlJRkJEU3lCRFpYSjBhV1pwClkyRjBaVEVhTUJnR0ExVUVDZ3dSU1c1MFpXd2dRMjl5Y0c5eVlYUnBiMjR4RkRBU0JnTlZCQWNNQzFOaGJuUmhJRU5zWVhKaE1Rc3cKQ1FZRFZRUUlEQUpEUVRFTE1Ba0dBMVVFQmhNQ1ZWTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUlhoSmVNSUdzSQo5b0kyTTlvNDBtNUNrdXV2NGE2bHVDTkFSU1ZMT01lbEQzak1XNXVnS2xRS2ViZ0FZZEZJZFZRc09iV29FUHhJdngzRUpoUys2b3lICm80SURFRENDQXd3d0h3WURWUjBqQkJnd0ZvQVVXU1BUcDBxb1kxUXVPWEN0NEE4SEsxY2tLcmN3YndZRFZSMGZCR2d3WmpCa29HS2cKWUlaZWFIUjBjSE02THk5elluZ3VZWEJwTG5SeWRYTjBaV1J6WlhKMmFXTmxjeTVwYm5SbGJDNWpiMjB2YzJkNEwyTmxjblJwWm1sagpZWFJwYjI0dmRqUXZjR05yWTNKc1AyTmhQWEJzWVhSbWIzSnRKbVZ1WTI5a2FXNW5QV1JsY2pBZEJnTlZIUTRFRmdRVVNKUDBuamxjCmxRN3hvSUE4c2dzVHRVbnpwYjB3RGdZRFZSMFBBUUgvQkFRREFnYkFNQXdHQTFVZEV3RUIvd1FDTUFBd2dnSTVCZ2txaGtpRytFMEIKRFFFRWdnSXFNSUlDSmpBZUJnb3Foa2lHK0UwQkRRRUJCQkFuRjdsai95RFBYYTZWVkkzRWZLOFRNSUlCWXdZS0tvWklodmhOQVEwQgpBakNDQVZNd0VBWUxLb1pJaHZoTkFRMEJBZ0VDQVFFd0VBWUxLb1pJaHZoTkFRMEJBZ0lDQVFFd0VBWUxLb1pJaHZoTkFRMEJBZ01DCkFRQXdFQVlMS29aSWh2aE5BUTBCQWdRQ0FRQXdFQVlMS29aSWh2aE5BUTBCQWdVQ0FRQXdFQVlMS29aSWh2aE5BUTBCQWdZQ0FRQXcKRUFZTEtvWklodmhOQVEwQkFnY0NBUUF3RUFZTEtvWklodmhOQVEwQkFnZ0NBUUF3RUFZTEtvWklodmhOQVEwQkFna0NBUUF3RUFZTApLb1pJaHZoTkFRMEJBZ29DQVFBd0VBWUxLb1pJaHZoTkFRMEJBZ3NDQVFBd0VBWUxLb1pJaHZoTkFRMEJBZ3dDQVFBd0VBWUxLb1pJCmh2aE5BUTBCQWcwQ0FRQXdFQVlMS29aSWh2aE5BUTBCQWc0Q0FRQXdFQVlMS29aSWh2aE5BUTBCQWc4Q0FRQXdFQVlMS29aSWh2aE4KQVEwQkFoQUNBUUF3RUFZTEtvWklodmhOQVEwQkFoRUNBUWt3SHdZTEtvWklodmhOQVEwQkFoSUVFQUVCQUFBQUFBQUFBQUFBQUFBQQpBQUF3RUFZS0tvWklodmhOQVEwQkF3UUNBQUF3RkFZS0tvWklodmhOQVEwQkJBUUdFSUJ2QUFBQU1BOEdDaXFHU0liNFRRRU5BUVVLCkFRSXdIZ1lLS29aSWh2aE5BUTBCQmdRUXgwdW9kWkIwRWFoN0p2S3BOQUJwQ3pCRUJnb3Foa2lHK0UwQkRRRUhNRFl3RUFZTEtvWkkKaHZoTkFRMEJCd0VCQWY4d0VBWUxLb1pJaHZoTkFRMEJCd0lCQVFBd0VBWUxLb1pJaHZoTkFRMEJCd01CQWY4d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWdVcmN5MUx5ODZkQVNXRlBvOW1zYmhkQlhqV1pyOXJodUpiOE1UL2J2UUxFQ0lRQ3Q0V2R2UlFSVkJtbnlVM3QzCml6QVQweXAveTBFbGdoWFlQYTNUTjlrTXJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDbWpDQ0FrQ2dBd0lCQWdJVVdTUFRwMHFvWTFRdU9YQ3Q0QThISzFja0tyY3dDZ1lJS29aSXpqMEVBd0l3CmFERWFNQmdHQTFVRUF3d1JTVzUwWld3Z1UwZFlJRkp2YjNRZ1EwRXhHakFZQmdOVkJBb01FVWx1ZEdWc0lFTnYKY25CdmNtRjBhVzl1TVJRd0VnWURWUVFIREF0VFlXNTBZU0JEYkdGeVlURUxNQWtHQTFVRUNBd0NRMEV4Q3pBSgpCZ05WQkFZVEFsVlRNQjRYRFRFNU1UQXpNVEV5TXpNME4xb1hEVE0wTVRBek1URXlNek0wTjFvd2NERWlNQ0FHCkExVUVBd3daU1c1MFpXd2dVMGRZSUZCRFN5QlFiR0YwWm05eWJTQkRRVEVhTUJnR0ExVUVDZ3dSU1c1MFpXd2cKUTI5eWNHOXlZWFJwYjI0eEZEQVNCZ05WQkFjTUMxTmhiblJoSUVOc1lYSmhNUXN3Q1FZRFZRUUlEQUpEUVRFTApNQWtHQTFVRUJoTUNWVk13V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVF3cCtMYytUVUJ0ZzFICitVOEpJc01zYmpIakNrVHRYYjhqUE02cjJkaHU5eklibGhEWjdJTmZxdDNJeDhYY0ZLRDhrME5FWHJrWjY2cUoKWGExS3pMSUtvNEcvTUlHOE1COEdBMVVkSXdRWU1CYUFGT25vUkZKVE5seExHSm9SL0VNWUxLWGNJSUJJTUZZRwpBMVVkSHdSUE1FMHdTNkJKb0VlR1JXaDBkSEJ6T2k4dmMySjRMV05sY25ScFptbGpZWFJsY3k1MGNuVnpkR1ZrCmMyVnlkbWxqWlhNdWFXNTBaV3d1WTI5dEwwbHVkR1ZzVTBkWVVtOXZkRU5CTG1SbGNqQWRCZ05WSFE0RUZnUVUKV1NQVHAwcW9ZMVF1T1hDdDRBOEhLMWNrS3Jjd0RnWURWUjBQQVFIL0JBUURBZ0VHTUJJR0ExVWRFd0VCL3dRSQpNQVlCQWY4Q0FRQXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSjFxK0ZUeitnVXVWZkJRdUNnSnNGckwyVFRTCmUxYUJaNTNPNTJUakZpZTZBaUFyaVBhUmFoVVg5T2E5a0dMbEFjaFdYS1Q2ajRSV1NSNTBCcWhyTjNVVDRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ2xEQ0NBam1nQXdJQkFnSVZBT25vUkZKVE5seExHSm9SL0VNWUxLWGNJSUJJTUFvR0NDcUdTTTQ5QkFNQwpNR2d4R2pBWUJnTlZCQU1NRVVsdWRHVnNJRk5IV0NCU2IyOTBJRU5CTVJvd0dBWURWUVFLREJGSmJuUmxiQ0JECmIzSndiM0poZEdsdmJqRVVNQklHQTFVRUJ3d0xVMkZ1ZEdFZ1EyeGhjbUV4Q3pBSkJnTlZCQWdNQWtOQk1Rc3cKQ1FZRFZRUUdFd0pWVXpBZUZ3MHhPVEV3TXpFd09UUTVNakZhRncwME9URXlNekV5TXpVNU5UbGFNR2d4R2pBWQpCZ05WQkFNTUVVbHVkR1ZzSUZOSFdDQlNiMjkwSUVOQk1Sb3dHQVlEVlFRS0RCRkpiblJsYkNCRGIzSndiM0poCmRHbHZiakVVTUJJR0ExVUVCd3dMVTJGdWRHRWdRMnhoY21FeEN6QUpCZ05WQkFnTUFrTkJNUXN3Q1FZRFZRUUcKRXdKVlV6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJFLzZELzFXSE5yV3dQbU5NSXlCS01XNQpKNkp6TXNqbzZ4UDJ2a0sxY2RaR2IxUEdSUC9DLzhFQ2dpRGtta2xtendMekxpKzAwMG03TExydEtKQTNvQzJqCmdiOHdnYnd3SHdZRFZSMGpCQmd3Rm9BVTZlaEVVbE0yWEVzWW1oSDhReGdzcGR3Z2dFZ3dWZ1lEVlIwZkJFOHcKVFRCTG9FbWdSNFpGYUhSMGNITTZMeTl6WW5ndFkyVnlkR2xtYVdOaGRHVnpMblJ5ZFhOMFpXUnpaWEoyYVdObApjeTVwYm5SbGJDNWpiMjB2U1c1MFpXeFRSMWhTYjI5MFEwRXVaR1Z5TUIwR0ExVWREZ1FXQkJUcDZFUlNVelpjClN4aWFFZnhER0N5bDNDQ0FTREFPQmdOVkhROEJBZjhFQkFNQ0FRWXdFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUIKQVRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQXp3OXpkVWlVSFBNVWQwQzRteDQxamxGWmtyTTN5NWYxbGduVgpPN0Ziak9vQ0lRQ29HdFVtVDRjWHQ3Vit5U0hiSjhIb2I5QWFucHZYTkgxRVIrL2daRitvcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        }
      x-sample-call-output: |-
        {
            "collateral_expiration_status": false,
            "quote_verification_result": "OK"
        }
  /version:
    get:
      description: |
        GetVersion is used to get the version of the application.
        Returns - The version of the application.
      operationId: GetVersion
      produces:
      - text/plain
      responses:
        "200":
          description: Successfully retrieved the version.
      tags:
      - Version
      x-sample-call-endpoint: https://qvs.com:12000/qvs/v1/version
      x-sample-call-output: |-
        Service Name: Quote Verification Service
        Version: v0.0.0-0f0162ea
        Build Date: 2021-08-03T12:17:18+0000
schemes:
- https
securityDefinitions:
  bearerAuth:
    description: Enter your bearer token in the format **Bearer &lt;token&gt;**
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
